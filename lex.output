Terminals unused in grammar

   ASSIGN


State 50 conflicts: 1 shift/reduce
State 96 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 var_declaration: type_specifier ID END
    7                | type_specifier ID SQBO NUM SQBC

    8 type_specifier: INT
    9               | VOID

   10 fun_declaration: type_specifier ID PO params PC compound_stmt

   11 params: param_list
   12       | VOID

   13 param_list: param_list COMMA param
   14           | param

   15 param: type_specifier ID
   16      | type_specifier ID SQBO SQBC

   17 compound_stmt: BO local_declarations statement_list BC

   18 local_declarations: local_declarations var_declaration
   19                   | %empty

   20 statement_list: statement_list statement
   21               | %empty

   22 statement: expression_stmt
   23          | compound_stmt
   24          | selection_stmt
   25          | iteration_stmt
   26          | return_stmt

   27 expression_stmt: expression END
   28                | END

   29 selection_stmt: IF PO expression PC statement
   30               | IF PO expression PC statement ELSE statement

   31 iteration_stmt: WHILE PO expression PC statement

   32 return_stmt: RETURN END
   33            | RETURN expression END

   34 expression: var EQ expression
   35           | simple_expression

   36 var: ID
   37    | ID SQBO expression SQBC

   38 simple_expression: additive_expression relop additive_expression
   39                  | additive_expression

   40 relop: GT
   41      | LS
   42      | GE
   43      | LE
   44      | EQ
   45      | NE

   46 additive_expression: additive_expression addop term
   47                    | term

   48 addop: PLUS
   49      | MINUS

   50 term: term mulop factor
   51     | factor

   52 mulop: MULTI
   53      | DIV

   54 factor: PO expression PC
   55       | var
   56       | call
   57       | NUM

   58 call: ID PO args PC

   59 args: arg_list
   60     | %empty

   61 arg_list: arg_list COMMA expression
   62         | expression


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 29 30
ELSE (259) 30
INT (260) 8
RETURN (261) 32 33
VOID (262) 9 12
WHILE (263) 31
ID (264) 6 7 10 15 16 36 37 58
NUM (265) 7 57
PLUS (266) 48
MINUS (267) 49
MULTI (268) 52
DIV (269) 53
GE (270) 42
LE (271) 43
EQ (272) 34 44
NE (273) 45
END (274) 6 27 28 32 33
ASSIGN (275)
GT (276) 40
LS (277) 41
BC (278) 17
BO (279) 17
PO (280) 10 29 30 31 54 58
PC (281) 10 29 30 31 54 58
COMMA (282) 13 61
SQBC (283) 7 16 37
SQBO (284) 7 16 37


Nonterminals, with rules where they appear

$accept (30)
    on left: 0
program (31)
    on left: 1, on right: 0
declaration_list (32)
    on left: 2 3, on right: 1 2
declaration (33)
    on left: 4 5, on right: 2 3
var_declaration (34)
    on left: 6 7, on right: 4 18
type_specifier (35)
    on left: 8 9, on right: 6 7 10 15 16
fun_declaration (36)
    on left: 10, on right: 5
params (37)
    on left: 11 12, on right: 10
param_list (38)
    on left: 13 14, on right: 11 13
param (39)
    on left: 15 16, on right: 13 14
compound_stmt (40)
    on left: 17, on right: 10 23
local_declarations (41)
    on left: 18 19, on right: 17 18
statement_list (42)
    on left: 20 21, on right: 17 20
statement (43)
    on left: 22 23 24 25 26, on right: 20 29 30 31
expression_stmt (44)
    on left: 27 28, on right: 22
selection_stmt (45)
    on left: 29 30, on right: 24
iteration_stmt (46)
    on left: 31, on right: 25
return_stmt (47)
    on left: 32 33, on right: 26
expression (48)
    on left: 34 35, on right: 27 29 30 31 33 34 37 54 61 62
var (49)
    on left: 36 37, on right: 34 55
simple_expression (50)
    on left: 38 39, on right: 35
relop (51)
    on left: 40 41 42 43 44 45, on right: 38
additive_expression (52)
    on left: 46 47, on right: 38 39 46
addop (53)
    on left: 48 49, on right: 46
term (54)
    on left: 50 51, on right: 46 47 50
mulop (55)
    on left: 52 53, on right: 50
factor (56)
    on left: 54 55 56 57, on right: 50 51
call (57)
    on left: 58, on right: 56
args (58)
    on left: 59 60, on right: 58
arg_list (59)
    on left: 61 62, on right: 59 61


State 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_declaration   go to state 6
    type_specifier    go to state 7
    fun_declaration   go to state 8


State 1

    8 type_specifier: INT .

    $default  reduce using rule 8 (type_specifier)


State 2

    9 type_specifier: VOID .

    $default  reduce using rule 9 (type_specifier)


State 3

    0 $accept: program . $end

    $end  shift, and go to state 9


State 4

    1 program: declaration_list .
    2 declaration_list: declaration_list . declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration      go to state 10
    var_declaration  go to state 6
    type_specifier   go to state 7
    fun_declaration  go to state 8


State 5

    3 declaration_list: declaration .

    $default  reduce using rule 3 (declaration_list)


State 6

    4 declaration: var_declaration .

    $default  reduce using rule 4 (declaration)


State 7

    6 var_declaration: type_specifier . ID END
    7                | type_specifier . ID SQBO NUM SQBC
   10 fun_declaration: type_specifier . ID PO params PC compound_stmt

    ID  shift, and go to state 11


State 8

    5 declaration: fun_declaration .

    $default  reduce using rule 5 (declaration)


State 9

    0 $accept: program $end .

    $default  accept


State 10

    2 declaration_list: declaration_list declaration .

    $default  reduce using rule 2 (declaration_list)


State 11

    6 var_declaration: type_specifier ID . END
    7                | type_specifier ID . SQBO NUM SQBC
   10 fun_declaration: type_specifier ID . PO params PC compound_stmt

    END   shift, and go to state 12
    PO    shift, and go to state 13
    SQBO  shift, and go to state 14


State 12

    6 var_declaration: type_specifier ID END .

    $default  reduce using rule 6 (var_declaration)


State 13

   10 fun_declaration: type_specifier ID PO . params PC compound_stmt

    INT   shift, and go to state 1
    VOID  shift, and go to state 15

    type_specifier  go to state 16
    params          go to state 17
    param_list      go to state 18
    param           go to state 19


State 14

    7 var_declaration: type_specifier ID SQBO . NUM SQBC

    NUM  shift, and go to state 20


State 15

    9 type_specifier: VOID .
   12 params: VOID .

    PC        reduce using rule 12 (params)
    $default  reduce using rule 9 (type_specifier)


State 16

   15 param: type_specifier . ID
   16      | type_specifier . ID SQBO SQBC

    ID  shift, and go to state 21


State 17

   10 fun_declaration: type_specifier ID PO params . PC compound_stmt

    PC  shift, and go to state 22


State 18

   11 params: param_list .
   13 param_list: param_list . COMMA param

    COMMA  shift, and go to state 23

    $default  reduce using rule 11 (params)


State 19

   14 param_list: param .

    $default  reduce using rule 14 (param_list)


State 20

    7 var_declaration: type_specifier ID SQBO NUM . SQBC

    SQBC  shift, and go to state 24


State 21

   15 param: type_specifier ID .
   16      | type_specifier ID . SQBO SQBC

    SQBO  shift, and go to state 25

    $default  reduce using rule 15 (param)


State 22

   10 fun_declaration: type_specifier ID PO params PC . compound_stmt

    BO  shift, and go to state 26

    compound_stmt  go to state 27


State 23

   13 param_list: param_list COMMA . param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type_specifier  go to state 16
    param           go to state 28


State 24

    7 var_declaration: type_specifier ID SQBO NUM SQBC .

    $default  reduce using rule 7 (var_declaration)


State 25

   16 param: type_specifier ID SQBO . SQBC

    SQBC  shift, and go to state 29


State 26

   17 compound_stmt: BO . local_declarations statement_list BC

    $default  reduce using rule 19 (local_declarations)

    local_declarations  go to state 30


State 27

   10 fun_declaration: type_specifier ID PO params PC compound_stmt .

    $default  reduce using rule 10 (fun_declaration)


State 28

   13 param_list: param_list COMMA param .

    $default  reduce using rule 13 (param_list)


State 29

   16 param: type_specifier ID SQBO SQBC .

    $default  reduce using rule 16 (param)


State 30

   17 compound_stmt: BO local_declarations . statement_list BC
   18 local_declarations: local_declarations . var_declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 21 (statement_list)

    var_declaration  go to state 31
    type_specifier   go to state 32
    statement_list   go to state 33


State 31

   18 local_declarations: local_declarations var_declaration .

    $default  reduce using rule 18 (local_declarations)


State 32

    6 var_declaration: type_specifier . ID END
    7                | type_specifier . ID SQBO NUM SQBC

    ID  shift, and go to state 34


State 33

   17 compound_stmt: BO local_declarations statement_list . BC
   20 statement_list: statement_list . statement

    IF      shift, and go to state 35
    RETURN  shift, and go to state 36
    WHILE   shift, and go to state 37
    ID      shift, and go to state 38
    NUM     shift, and go to state 39
    END     shift, and go to state 40
    BC      shift, and go to state 41
    BO      shift, and go to state 26
    PO      shift, and go to state 42

    compound_stmt        go to state 43
    statement            go to state 44
    expression_stmt      go to state 45
    selection_stmt       go to state 46
    iteration_stmt       go to state 47
    return_stmt          go to state 48
    expression           go to state 49
    var                  go to state 50
    simple_expression    go to state 51
    additive_expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55


State 34

    6 var_declaration: type_specifier ID . END
    7                | type_specifier ID . SQBO NUM SQBC

    END   shift, and go to state 12
    SQBO  shift, and go to state 14


State 35

   29 selection_stmt: IF . PO expression PC statement
   30               | IF . PO expression PC statement ELSE statement

    PO  shift, and go to state 56


State 36

   32 return_stmt: RETURN . END
   33            | RETURN . expression END

    ID   shift, and go to state 38
    NUM  shift, and go to state 39
    END  shift, and go to state 57
    PO   shift, and go to state 42

    expression           go to state 58
    var                  go to state 50
    simple_expression    go to state 51
    additive_expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55


State 37

   31 iteration_stmt: WHILE . PO expression PC statement

    PO  shift, and go to state 59


State 38

   36 var: ID .
   37    | ID . SQBO expression SQBC
   58 call: ID . PO args PC

    PO    shift, and go to state 60
    SQBO  shift, and go to state 61

    $default  reduce using rule 36 (var)


State 39

   57 factor: NUM .

    $default  reduce using rule 57 (factor)


State 40

   28 expression_stmt: END .

    $default  reduce using rule 28 (expression_stmt)


State 41

   17 compound_stmt: BO local_declarations statement_list BC .

    $default  reduce using rule 17 (compound_stmt)


State 42

   54 factor: PO . expression PC

    ID   shift, and go to state 38
    NUM  shift, and go to state 39
    PO   shift, and go to state 42

    expression           go to state 62
    var                  go to state 50
    simple_expression    go to state 51
    additive_expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55


State 43

   23 statement: compound_stmt .

    $default  reduce using rule 23 (statement)


State 44

   20 statement_list: statement_list statement .

    $default  reduce using rule 20 (statement_list)


State 45

   22 statement: expression_stmt .

    $default  reduce using rule 22 (statement)


State 46

   24 statement: selection_stmt .

    $default  reduce using rule 24 (statement)


State 47

   25 statement: iteration_stmt .

    $default  reduce using rule 25 (statement)


State 48

   26 statement: return_stmt .

    $default  reduce using rule 26 (statement)


State 49

   27 expression_stmt: expression . END

    END  shift, and go to state 63


State 50

   34 expression: var . EQ expression
   55 factor: var .

    EQ  shift, and go to state 64

    EQ        [reduce using rule 55 (factor)]
    $default  reduce using rule 55 (factor)


State 51

   35 expression: simple_expression .

    $default  reduce using rule 35 (expression)


State 52

   38 simple_expression: additive_expression . relop additive_expression
   39                  | additive_expression .
   46 additive_expression: additive_expression . addop term

    PLUS   shift, and go to state 65
    MINUS  shift, and go to state 66
    GE     shift, and go to state 67
    LE     shift, and go to state 68
    EQ     shift, and go to state 69
    NE     shift, and go to state 70
    GT     shift, and go to state 71
    LS     shift, and go to state 72

    $default  reduce using rule 39 (simple_expression)

    relop  go to state 73
    addop  go to state 74


State 53

   47 additive_expression: term .
   50 term: term . mulop factor

    MULTI  shift, and go to state 75
    DIV    shift, and go to state 76

    $default  reduce using rule 47 (additive_expression)

    mulop  go to state 77


State 54

   51 term: factor .

    $default  reduce using rule 51 (term)


State 55

   56 factor: call .

    $default  reduce using rule 56 (factor)


State 56

   29 selection_stmt: IF PO . expression PC statement
   30               | IF PO . expression PC statement ELSE statement

    ID   shift, and go to state 38
    NUM  shift, and go to state 39
    PO   shift, and go to state 42

    expression           go to state 78
    var                  go to state 50
    simple_expression    go to state 51
    additive_expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55


State 57

   32 return_stmt: RETURN END .

    $default  reduce using rule 32 (return_stmt)


State 58

   33 return_stmt: RETURN expression . END

    END  shift, and go to state 79


State 59

   31 iteration_stmt: WHILE PO . expression PC statement

    ID   shift, and go to state 38
    NUM  shift, and go to state 39
    PO   shift, and go to state 42

    expression           go to state 80
    var                  go to state 50
    simple_expression    go to state 51
    additive_expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55


State 60

   58 call: ID PO . args PC

    ID   shift, and go to state 38
    NUM  shift, and go to state 39
    PO   shift, and go to state 42

    $default  reduce using rule 60 (args)

    expression           go to state 81
    var                  go to state 50
    simple_expression    go to state 51
    additive_expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55
    args                 go to state 82
    arg_list             go to state 83


State 61

   37 var: ID SQBO . expression SQBC

    ID   shift, and go to state 38
    NUM  shift, and go to state 39
    PO   shift, and go to state 42

    expression           go to state 84
    var                  go to state 50
    simple_expression    go to state 51
    additive_expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55


State 62

   54 factor: PO expression . PC

    PC  shift, and go to state 85


State 63

   27 expression_stmt: expression END .

    $default  reduce using rule 27 (expression_stmt)


State 64

   34 expression: var EQ . expression

    ID   shift, and go to state 38
    NUM  shift, and go to state 39
    PO   shift, and go to state 42

    expression           go to state 86
    var                  go to state 50
    simple_expression    go to state 51
    additive_expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55


State 65

   48 addop: PLUS .

    $default  reduce using rule 48 (addop)


State 66

   49 addop: MINUS .

    $default  reduce using rule 49 (addop)


State 67

   42 relop: GE .

    $default  reduce using rule 42 (relop)


State 68

   43 relop: LE .

    $default  reduce using rule 43 (relop)


State 69

   44 relop: EQ .

    $default  reduce using rule 44 (relop)


State 70

   45 relop: NE .

    $default  reduce using rule 45 (relop)


State 71

   40 relop: GT .

    $default  reduce using rule 40 (relop)


State 72

   41 relop: LS .

    $default  reduce using rule 41 (relop)


State 73

   38 simple_expression: additive_expression relop . additive_expression

    ID   shift, and go to state 38
    NUM  shift, and go to state 39
    PO   shift, and go to state 42

    var                  go to state 87
    additive_expression  go to state 88
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55


State 74

   46 additive_expression: additive_expression addop . term

    ID   shift, and go to state 38
    NUM  shift, and go to state 39
    PO   shift, and go to state 42

    var     go to state 87
    term    go to state 89
    factor  go to state 54
    call    go to state 55


State 75

   52 mulop: MULTI .

    $default  reduce using rule 52 (mulop)


State 76

   53 mulop: DIV .

    $default  reduce using rule 53 (mulop)


State 77

   50 term: term mulop . factor

    ID   shift, and go to state 38
    NUM  shift, and go to state 39
    PO   shift, and go to state 42

    var     go to state 87
    factor  go to state 90
    call    go to state 55


State 78

   29 selection_stmt: IF PO expression . PC statement
   30               | IF PO expression . PC statement ELSE statement

    PC  shift, and go to state 91


State 79

   33 return_stmt: RETURN expression END .

    $default  reduce using rule 33 (return_stmt)


State 80

   31 iteration_stmt: WHILE PO expression . PC statement

    PC  shift, and go to state 92


State 81

   62 arg_list: expression .

    $default  reduce using rule 62 (arg_list)


State 82

   58 call: ID PO args . PC

    PC  shift, and go to state 93


State 83

   59 args: arg_list .
   61 arg_list: arg_list . COMMA expression

    COMMA  shift, and go to state 94

    $default  reduce using rule 59 (args)


State 84

   37 var: ID SQBO expression . SQBC

    SQBC  shift, and go to state 95


State 85

   54 factor: PO expression PC .

    $default  reduce using rule 54 (factor)


State 86

   34 expression: var EQ expression .

    $default  reduce using rule 34 (expression)


State 87

   55 factor: var .

    $default  reduce using rule 55 (factor)


State 88

   38 simple_expression: additive_expression relop additive_expression .
   46 additive_expression: additive_expression . addop term

    PLUS   shift, and go to state 65
    MINUS  shift, and go to state 66

    $default  reduce using rule 38 (simple_expression)

    addop  go to state 74


State 89

   46 additive_expression: additive_expression addop term .
   50 term: term . mulop factor

    MULTI  shift, and go to state 75
    DIV    shift, and go to state 76

    $default  reduce using rule 46 (additive_expression)

    mulop  go to state 77


State 90

   50 term: term mulop factor .

    $default  reduce using rule 50 (term)


State 91

   29 selection_stmt: IF PO expression PC . statement
   30               | IF PO expression PC . statement ELSE statement

    IF      shift, and go to state 35
    RETURN  shift, and go to state 36
    WHILE   shift, and go to state 37
    ID      shift, and go to state 38
    NUM     shift, and go to state 39
    END     shift, and go to state 40
    BO      shift, and go to state 26
    PO      shift, and go to state 42

    compound_stmt        go to state 43
    statement            go to state 96
    expression_stmt      go to state 45
    selection_stmt       go to state 46
    iteration_stmt       go to state 47
    return_stmt          go to state 48
    expression           go to state 49
    var                  go to state 50
    simple_expression    go to state 51
    additive_expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55


State 92

   31 iteration_stmt: WHILE PO expression PC . statement

    IF      shift, and go to state 35
    RETURN  shift, and go to state 36
    WHILE   shift, and go to state 37
    ID      shift, and go to state 38
    NUM     shift, and go to state 39
    END     shift, and go to state 40
    BO      shift, and go to state 26
    PO      shift, and go to state 42

    compound_stmt        go to state 43
    statement            go to state 97
    expression_stmt      go to state 45
    selection_stmt       go to state 46
    iteration_stmt       go to state 47
    return_stmt          go to state 48
    expression           go to state 49
    var                  go to state 50
    simple_expression    go to state 51
    additive_expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55


State 93

   58 call: ID PO args PC .

    $default  reduce using rule 58 (call)


State 94

   61 arg_list: arg_list COMMA . expression

    ID   shift, and go to state 38
    NUM  shift, and go to state 39
    PO   shift, and go to state 42

    expression           go to state 98
    var                  go to state 50
    simple_expression    go to state 51
    additive_expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55


State 95

   37 var: ID SQBO expression SQBC .

    $default  reduce using rule 37 (var)


State 96

   29 selection_stmt: IF PO expression PC statement .
   30               | IF PO expression PC statement . ELSE statement

    ELSE  shift, and go to state 99

    ELSE      [reduce using rule 29 (selection_stmt)]
    $default  reduce using rule 29 (selection_stmt)


State 97

   31 iteration_stmt: WHILE PO expression PC statement .

    $default  reduce using rule 31 (iteration_stmt)


State 98

   61 arg_list: arg_list COMMA expression .

    $default  reduce using rule 61 (arg_list)


State 99

   30 selection_stmt: IF PO expression PC statement ELSE . statement

    IF      shift, and go to state 35
    RETURN  shift, and go to state 36
    WHILE   shift, and go to state 37
    ID      shift, and go to state 38
    NUM     shift, and go to state 39
    END     shift, and go to state 40
    BO      shift, and go to state 26
    PO      shift, and go to state 42

    compound_stmt        go to state 43
    statement            go to state 100
    expression_stmt      go to state 45
    selection_stmt       go to state 46
    iteration_stmt       go to state 47
    return_stmt          go to state 48
    expression           go to state 49
    var                  go to state 50
    simple_expression    go to state 51
    additive_expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55


State 100

   30 selection_stmt: IF PO expression PC statement ELSE statement .

    $default  reduce using rule 30 (selection_stmt)
